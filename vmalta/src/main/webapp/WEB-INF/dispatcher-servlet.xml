<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">

	<context:component-scan base-package="com" />

	<!-- Spring MVC不处理静态资源 -->
	<mvc:default-servlet-handler />

	<!-- 支持mvc注解驱动 -->
	<mvc:annotation-driven />

	<!-- spring mvc 配置 
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="2" />
	</bean>-->

	<!-- MyBatis 部署 
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="com.mysql.jdbc.Driver"
		p:url="jdbc:mysql://127.0.0.1:3306/mxfdb?characterEncoding=utf8"
		p:username="root" p:password="root" p:maxActive="10" p:maxIdle="10">
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	-->

		<!-- 所有配置的mapper文件 
		<property name="mapperLocations" value="classpath*:com/domain/mapper/normal/*.xml" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.domain.dao.*" />
	</bean>
	-->

	<!-- thymeleaf 配置 -->
	<!-- SpringResourceTemplateResolver automatically integrates with Spring's 
		own -->
	<!-- resource resolution infrastructure, which is highly recommended. -->
	<bean id="templateResolver"
		class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
		<!-- property name="webApplicationContext" ref="webApplicationContext" 			/ -->
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".html" />
		<!-- HTML is the default value, added here for the sake of clarity. -->
		<property name="templateMode" value="HTML" />
		<property name="characterEncoding" value="UTF-8" />
		<!-- Template cache is true by default. Set to false if you want -->
		<!-- templates to be automatically updated when modified. -->
		<property name="cacheable" value="true" />
	</bean>

	<!-- SpringTemplateEngine automatically applies SpringStandardDialect and -->
	<!-- enables Spring's own MessageSource message resolution mechanisms. -->
	<bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
		<property name="templateResolver" ref="templateResolver" />
		<!-- Enabling the SpringEL compiler with Spring 4.2.4 or newer can speed 
			up -->
		<!-- execution in most scenarios, but might be incompatible with specific -->
		<!-- cases when expressions in one template are reused across different 
			data -->
		<!-- ypes, so this flag is "false" by default for safer backwards -->
		<!-- compatibility. -->
		<property name="enableSpringELCompiler" value="true" />
	</bean>

	<bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
		<property name="templateEngine" ref="templateEngine" />
		<!-- NOTE 'order' and 'viewNames' are optional 
		<property name="order" value="1" />
		<property name="viewNames" value="*.html,*.xhtml" />-->
		<property name="characterEncoding" value="UTF-8"/>
	</bean>

</beans>